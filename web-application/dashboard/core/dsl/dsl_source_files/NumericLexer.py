# Generated from NumericLexer.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2J")
        buf.write("\u0162\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3")
        buf.write("\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16")
        buf.write("\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!")
        buf.write("\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3")
        buf.write("\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3")
        buf.write("-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61")
        buf.write("\3\62\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65")
        buf.write("\3\65\3\66\3\66\3\66\3\67\3\67\3\67\38\38\38\39\39\39")
        buf.write("\3:\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3>\3?\3?\3")
        buf.write("?\3@\3@\3@\3A\3A\3A\3B\3B\3B\3C\3C\3C\3D\3D\3D\3E\3E\3")
        buf.write("E\3F\3F\3F\3G\3G\3G\3H\3H\3H\3I\3I\3I\2\2J\3\3\5\4\7\5")
        buf.write("\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35")
        buf.write("\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33")
        buf.write("\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[")
        buf.write("/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177")
        buf.write("A\u0081B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008f")
        buf.write("I\u0091J\3\2\3\3\2\62;\2\u0161\2\3\3\2\2\2\2\5\3\2\2\2")
        buf.write("\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17")
        buf.write("\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3")
        buf.write("\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2")
        buf.write("\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3")
        buf.write("\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2")
        buf.write("\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3")
        buf.write("\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E")
        buf.write("\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2")
        buf.write("O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2")
        buf.write("\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2")
        buf.write("\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2")
        buf.write("\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3")
        buf.write("\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177")
        buf.write("\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2")
        buf.write("\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d")
        buf.write("\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\3\u0093\3\2\2")
        buf.write("\2\5\u0098\3\2\2\2\7\u009a\3\2\2\2\t\u009c\3\2\2\2\13")
        buf.write("\u009e\3\2\2\2\r\u00a0\3\2\2\2\17\u00a2\3\2\2\2\21\u00a4")
        buf.write("\3\2\2\2\23\u00a6\3\2\2\2\25\u00a8\3\2\2\2\27\u00aa\3")
        buf.write("\2\2\2\31\u00ac\3\2\2\2\33\u00ae\3\2\2\2\35\u00b1\3\2")
        buf.write("\2\2\37\u00b4\3\2\2\2!\u00b7\3\2\2\2#\u00ba\3\2\2\2%\u00bd")
        buf.write("\3\2\2\2\'\u00c0\3\2\2\2)\u00c3\3\2\2\2+\u00c6\3\2\2\2")
        buf.write("-\u00c9\3\2\2\2/\u00cc\3\2\2\2\61\u00cf\3\2\2\2\63\u00d2")
        buf.write("\3\2\2\2\65\u00d5\3\2\2\2\67\u00d8\3\2\2\29\u00db\3\2")
        buf.write("\2\2;\u00de\3\2\2\2=\u00e1\3\2\2\2?\u00e4\3\2\2\2A\u00e7")
        buf.write("\3\2\2\2C\u00ea\3\2\2\2E\u00ed\3\2\2\2G\u00f0\3\2\2\2")
        buf.write("I\u00f3\3\2\2\2K\u00f6\3\2\2\2M\u00f9\3\2\2\2O\u00fc\3")
        buf.write("\2\2\2Q\u00ff\3\2\2\2S\u0102\3\2\2\2U\u0105\3\2\2\2W\u0108")
        buf.write("\3\2\2\2Y\u010b\3\2\2\2[\u010e\3\2\2\2]\u0111\3\2\2\2")
        buf.write("_\u0114\3\2\2\2a\u0117\3\2\2\2c\u011a\3\2\2\2e\u011d\3")
        buf.write("\2\2\2g\u0120\3\2\2\2i\u0123\3\2\2\2k\u0126\3\2\2\2m\u0129")
        buf.write("\3\2\2\2o\u012c\3\2\2\2q\u012f\3\2\2\2s\u0132\3\2\2\2")
        buf.write("u\u0135\3\2\2\2w\u0138\3\2\2\2y\u013b\3\2\2\2{\u013e\3")
        buf.write("\2\2\2}\u0141\3\2\2\2\177\u0144\3\2\2\2\u0081\u0147\3")
        buf.write("\2\2\2\u0083\u014a\3\2\2\2\u0085\u014d\3\2\2\2\u0087\u0150")
        buf.write("\3\2\2\2\u0089\u0153\3\2\2\2\u008b\u0156\3\2\2\2\u008d")
        buf.write("\u0159\3\2\2\2\u008f\u015c\3\2\2\2\u0091\u015f\3\2\2\2")
        buf.write("\u0093\u0094\5\5\3\2\u0094\u0095\5\5\3\2\u0095\u0096\5")
        buf.write("\5\3\2\u0096\u0097\5\5\3\2\u0097\4\3\2\2\2\u0098\u0099")
        buf.write("\t\2\2\2\u0099\6\3\2\2\2\u009a\u009b\7\62\2\2\u009b\b")
        buf.write("\3\2\2\2\u009c\u009d\7\63\2\2\u009d\n\3\2\2\2\u009e\u009f")
        buf.write("\7\64\2\2\u009f\f\3\2\2\2\u00a0\u00a1\7\65\2\2\u00a1\16")
        buf.write("\3\2\2\2\u00a2\u00a3\7\66\2\2\u00a3\20\3\2\2\2\u00a4\u00a5")
        buf.write("\7\67\2\2\u00a5\22\3\2\2\2\u00a6\u00a7\78\2\2\u00a7\24")
        buf.write("\3\2\2\2\u00a8\u00a9\79\2\2\u00a9\26\3\2\2\2\u00aa\u00ab")
        buf.write("\7:\2\2\u00ab\30\3\2\2\2\u00ac\u00ad\7;\2\2\u00ad\32\3")
        buf.write("\2\2\2\u00ae\u00af\7\62\2\2\u00af\u00b0\7\62\2\2\u00b0")
        buf.write("\34\3\2\2\2\u00b1\u00b2\7\62\2\2\u00b2\u00b3\7\63\2\2")
        buf.write("\u00b3\36\3\2\2\2\u00b4\u00b5\7\62\2\2\u00b5\u00b6\7\64")
        buf.write("\2\2\u00b6 \3\2\2\2\u00b7\u00b8\7\62\2\2\u00b8\u00b9\7")
        buf.write("\65\2\2\u00b9\"\3\2\2\2\u00ba\u00bb\7\62\2\2\u00bb\u00bc")
        buf.write("\7\66\2\2\u00bc$\3\2\2\2\u00bd\u00be\7\62\2\2\u00be\u00bf")
        buf.write("\7\67\2\2\u00bf&\3\2\2\2\u00c0\u00c1\7\62\2\2\u00c1\u00c2")
        buf.write("\78\2\2\u00c2(\3\2\2\2\u00c3\u00c4\7\62\2\2\u00c4\u00c5")
        buf.write("\79\2\2\u00c5*\3\2\2\2\u00c6\u00c7\7\62\2\2\u00c7\u00c8")
        buf.write("\7:\2\2\u00c8,\3\2\2\2\u00c9\u00ca\7\62\2\2\u00ca\u00cb")
        buf.write("\7;\2\2\u00cb.\3\2\2\2\u00cc\u00cd\7\63\2\2\u00cd\u00ce")
        buf.write("\7\62\2\2\u00ce\60\3\2\2\2\u00cf\u00d0\7\63\2\2\u00d0")
        buf.write("\u00d1\7\63\2\2\u00d1\62\3\2\2\2\u00d2\u00d3\7\63\2\2")
        buf.write("\u00d3\u00d4\7\64\2\2\u00d4\64\3\2\2\2\u00d5\u00d6\7\63")
        buf.write("\2\2\u00d6\u00d7\7\65\2\2\u00d7\66\3\2\2\2\u00d8\u00d9")
        buf.write("\7\63\2\2\u00d9\u00da\7\66\2\2\u00da8\3\2\2\2\u00db\u00dc")
        buf.write("\7\63\2\2\u00dc\u00dd\7\67\2\2\u00dd:\3\2\2\2\u00de\u00df")
        buf.write("\7\63\2\2\u00df\u00e0\78\2\2\u00e0<\3\2\2\2\u00e1\u00e2")
        buf.write("\7\63\2\2\u00e2\u00e3\79\2\2\u00e3>\3\2\2\2\u00e4\u00e5")
        buf.write("\7\63\2\2\u00e5\u00e6\7:\2\2\u00e6@\3\2\2\2\u00e7\u00e8")
        buf.write("\7\63\2\2\u00e8\u00e9\7;\2\2\u00e9B\3\2\2\2\u00ea\u00eb")
        buf.write("\7\64\2\2\u00eb\u00ec\7\62\2\2\u00ecD\3\2\2\2\u00ed\u00ee")
        buf.write("\7\64\2\2\u00ee\u00ef\7\63\2\2\u00efF\3\2\2\2\u00f0\u00f1")
        buf.write("\7\64\2\2\u00f1\u00f2\7\64\2\2\u00f2H\3\2\2\2\u00f3\u00f4")
        buf.write("\7\64\2\2\u00f4\u00f5\7\65\2\2\u00f5J\3\2\2\2\u00f6\u00f7")
        buf.write("\7\64\2\2\u00f7\u00f8\7\66\2\2\u00f8L\3\2\2\2\u00f9\u00fa")
        buf.write("\7\64\2\2\u00fa\u00fb\7\67\2\2\u00fbN\3\2\2\2\u00fc\u00fd")
        buf.write("\7\64\2\2\u00fd\u00fe\78\2\2\u00feP\3\2\2\2\u00ff\u0100")
        buf.write("\7\64\2\2\u0100\u0101\79\2\2\u0101R\3\2\2\2\u0102\u0103")
        buf.write("\7\64\2\2\u0103\u0104\7:\2\2\u0104T\3\2\2\2\u0105\u0106")
        buf.write("\7\64\2\2\u0106\u0107\7;\2\2\u0107V\3\2\2\2\u0108\u0109")
        buf.write("\7\65\2\2\u0109\u010a\7\62\2\2\u010aX\3\2\2\2\u010b\u010c")
        buf.write("\7\65\2\2\u010c\u010d\7\63\2\2\u010dZ\3\2\2\2\u010e\u010f")
        buf.write("\7\65\2\2\u010f\u0110\7\64\2\2\u0110\\\3\2\2\2\u0111\u0112")
        buf.write("\7\65\2\2\u0112\u0113\7\65\2\2\u0113^\3\2\2\2\u0114\u0115")
        buf.write("\7\65\2\2\u0115\u0116\7\66\2\2\u0116`\3\2\2\2\u0117\u0118")
        buf.write("\7\65\2\2\u0118\u0119\7\67\2\2\u0119b\3\2\2\2\u011a\u011b")
        buf.write("\7\65\2\2\u011b\u011c\78\2\2\u011cd\3\2\2\2\u011d\u011e")
        buf.write("\7\65\2\2\u011e\u011f\79\2\2\u011ff\3\2\2\2\u0120\u0121")
        buf.write("\7\65\2\2\u0121\u0122\7:\2\2\u0122h\3\2\2\2\u0123\u0124")
        buf.write("\7\65\2\2\u0124\u0125\7;\2\2\u0125j\3\2\2\2\u0126\u0127")
        buf.write("\7\66\2\2\u0127\u0128\7\62\2\2\u0128l\3\2\2\2\u0129\u012a")
        buf.write("\7\66\2\2\u012a\u012b\7\63\2\2\u012bn\3\2\2\2\u012c\u012d")
        buf.write("\7\66\2\2\u012d\u012e\7\64\2\2\u012ep\3\2\2\2\u012f\u0130")
        buf.write("\7\66\2\2\u0130\u0131\7\65\2\2\u0131r\3\2\2\2\u0132\u0133")
        buf.write("\7\66\2\2\u0133\u0134\7\66\2\2\u0134t\3\2\2\2\u0135\u0136")
        buf.write("\7\66\2\2\u0136\u0137\7\67\2\2\u0137v\3\2\2\2\u0138\u0139")
        buf.write("\7\66\2\2\u0139\u013a\78\2\2\u013ax\3\2\2\2\u013b\u013c")
        buf.write("\7\66\2\2\u013c\u013d\79\2\2\u013dz\3\2\2\2\u013e\u013f")
        buf.write("\7\66\2\2\u013f\u0140\7:\2\2\u0140|\3\2\2\2\u0141\u0142")
        buf.write("\7\66\2\2\u0142\u0143\7;\2\2\u0143~\3\2\2\2\u0144\u0145")
        buf.write("\7\67\2\2\u0145\u0146\7\62\2\2\u0146\u0080\3\2\2\2\u0147")
        buf.write("\u0148\7\67\2\2\u0148\u0149\7\63\2\2\u0149\u0082\3\2\2")
        buf.write("\2\u014a\u014b\7\67\2\2\u014b\u014c\7\64\2\2\u014c\u0084")
        buf.write("\3\2\2\2\u014d\u014e\7\67\2\2\u014e\u014f\7\65\2\2\u014f")
        buf.write("\u0086\3\2\2\2\u0150\u0151\7\67\2\2\u0151\u0152\7\66\2")
        buf.write("\2\u0152\u0088\3\2\2\2\u0153\u0154\7\67\2\2\u0154\u0155")
        buf.write("\7\67\2\2\u0155\u008a\3\2\2\2\u0156\u0157\7\67\2\2\u0157")
        buf.write("\u0158\78\2\2\u0158\u008c\3\2\2\2\u0159\u015a\7\67\2\2")
        buf.write("\u015a\u015b\79\2\2\u015b\u008e\3\2\2\2\u015c\u015d\7")
        buf.write("\67\2\2\u015d\u015e\7:\2\2\u015e\u0090\3\2\2\2\u015f\u0160")
        buf.write("\7\67\2\2\u0160\u0161\7;\2\2\u0161\u0092\3\2\2\2\3\2\2")
        return buf.getvalue()


class NumericLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    FOUR_DIGIT = 1
    DIGIT = 2
    INT_0 = 3
    INT_1 = 4
    INT_2 = 5
    INT_3 = 6
    INT_4 = 7
    INT_5 = 8
    INT_6 = 9
    INT_7 = 10
    INT_8 = 11
    INT_9 = 12
    INT_00 = 13
    INT_01 = 14
    INT_02 = 15
    INT_03 = 16
    INT_04 = 17
    INT_05 = 18
    INT_06 = 19
    INT_07 = 20
    INT_08 = 21
    INT_09 = 22
    INT_10 = 23
    INT_11 = 24
    INT_12 = 25
    INT_13 = 26
    INT_14 = 27
    INT_15 = 28
    INT_16 = 29
    INT_17 = 30
    INT_18 = 31
    INT_19 = 32
    INT_20 = 33
    INT_21 = 34
    INT_22 = 35
    INT_23 = 36
    INT_24 = 37
    INT_25 = 38
    INT_26 = 39
    INT_27 = 40
    INT_28 = 41
    INT_29 = 42
    INT_30 = 43
    INT_31 = 44
    INT_32 = 45
    INT_33 = 46
    INT_34 = 47
    INT_35 = 48
    INT_36 = 49
    INT_37 = 50
    INT_38 = 51
    INT_39 = 52
    INT_40 = 53
    INT_41 = 54
    INT_42 = 55
    INT_43 = 56
    INT_44 = 57
    INT_45 = 58
    INT_46 = 59
    INT_47 = 60
    INT_48 = 61
    INT_49 = 62
    INT_50 = 63
    INT_51 = 64
    INT_52 = 65
    INT_53 = 66
    INT_54 = 67
    INT_55 = 68
    INT_56 = 69
    INT_57 = 70
    INT_58 = 71
    INT_59 = 72

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'0'", "'1'", "'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", 
            "'9'", "'00'", "'01'", "'02'", "'03'", "'04'", "'05'", "'06'", 
            "'07'", "'08'", "'09'", "'10'", "'11'", "'12'", "'13'", "'14'", 
            "'15'", "'16'", "'17'", "'18'", "'19'", "'20'", "'21'", "'22'", 
            "'23'", "'24'", "'25'", "'26'", "'27'", "'28'", "'29'", "'30'", 
            "'31'", "'32'", "'33'", "'34'", "'35'", "'36'", "'37'", "'38'", 
            "'39'", "'40'", "'41'", "'42'", "'43'", "'44'", "'45'", "'46'", 
            "'47'", "'48'", "'49'", "'50'", "'51'", "'52'", "'53'", "'54'", 
            "'55'", "'56'", "'57'", "'58'", "'59'" ]

    symbolicNames = [ "<INVALID>",
            "FOUR_DIGIT", "DIGIT", "INT_0", "INT_1", "INT_2", "INT_3", "INT_4", 
            "INT_5", "INT_6", "INT_7", "INT_8", "INT_9", "INT_00", "INT_01", 
            "INT_02", "INT_03", "INT_04", "INT_05", "INT_06", "INT_07", 
            "INT_08", "INT_09", "INT_10", "INT_11", "INT_12", "INT_13", 
            "INT_14", "INT_15", "INT_16", "INT_17", "INT_18", "INT_19", 
            "INT_20", "INT_21", "INT_22", "INT_23", "INT_24", "INT_25", 
            "INT_26", "INT_27", "INT_28", "INT_29", "INT_30", "INT_31", 
            "INT_32", "INT_33", "INT_34", "INT_35", "INT_36", "INT_37", 
            "INT_38", "INT_39", "INT_40", "INT_41", "INT_42", "INT_43", 
            "INT_44", "INT_45", "INT_46", "INT_47", "INT_48", "INT_49", 
            "INT_50", "INT_51", "INT_52", "INT_53", "INT_54", "INT_55", 
            "INT_56", "INT_57", "INT_58", "INT_59" ]

    ruleNames = [ "FOUR_DIGIT", "DIGIT", "INT_0", "INT_1", "INT_2", "INT_3", 
                  "INT_4", "INT_5", "INT_6", "INT_7", "INT_8", "INT_9", 
                  "INT_00", "INT_01", "INT_02", "INT_03", "INT_04", "INT_05", 
                  "INT_06", "INT_07", "INT_08", "INT_09", "INT_10", "INT_11", 
                  "INT_12", "INT_13", "INT_14", "INT_15", "INT_16", "INT_17", 
                  "INT_18", "INT_19", "INT_20", "INT_21", "INT_22", "INT_23", 
                  "INT_24", "INT_25", "INT_26", "INT_27", "INT_28", "INT_29", 
                  "INT_30", "INT_31", "INT_32", "INT_33", "INT_34", "INT_35", 
                  "INT_36", "INT_37", "INT_38", "INT_39", "INT_40", "INT_41", 
                  "INT_42", "INT_43", "INT_44", "INT_45", "INT_46", "INT_47", 
                  "INT_48", "INT_49", "INT_50", "INT_51", "INT_52", "INT_53", 
                  "INT_54", "INT_55", "INT_56", "INT_57", "INT_58", "INT_59" ]

    grammarFileName = "NumericLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


