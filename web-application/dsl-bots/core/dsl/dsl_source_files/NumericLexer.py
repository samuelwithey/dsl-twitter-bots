# Generated from NumericLexer.g4 by ANTLR 4.8
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2J")
        buf.write("\u0171\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\t")
        buf.write("C\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I\tI\3\2\3\2\3\3\3\3")
        buf.write("\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3")
        buf.write("\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3")
        buf.write("\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35")
        buf.write("\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!")
        buf.write("\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3%\3&\3&\3&\3\'\3")
        buf.write("\'\3\'\3(\3(\3(\3)\3)\3)\3*\3*\3*\3+\3+\3+\3,\3,\3,\3")
        buf.write("-\3-\3-\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61")
        buf.write("\3\62\3\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65")
        buf.write("\3\65\3\66\3\66\3\66\3\67\3\67\3\67\38\38\38\39\39\39")
        buf.write("\3:\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3>\3?\3?\3")
        buf.write("?\3@\3@\3@\3A\3A\3A\3B\3B\3B\3C\3C\3C\3D\3D\3D\3E\3E\3")
        buf.write("E\3F\3F\3F\3G\3G\3G\3H\3H\3H\7H\u015f\nH\fH\16H\u0162")
        buf.write("\13H\5H\u0164\nH\3I\6I\u0167\nI\rI\16I\u0168\3I\3I\7I")
        buf.write("\u016d\nI\fI\16I\u0170\13I\2\2J\3\3\5\4\7\5\t\6\13\7\r")
        buf.write("\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!")
        buf.write("\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67")
        buf.write("\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61")
        buf.write("a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081")
        buf.write("B\u0083C\u0085D\u0087E\u0089F\u008bG\u008dH\u008fI\u0091")
        buf.write("J\3\2\2\2\u0174\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2")
        buf.write("\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21")
        buf.write("\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3")
        buf.write("\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2")
        buf.write("\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2")
        buf.write("\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2")
        buf.write("\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2")
        buf.write("\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q")
        buf.write("\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2")
        buf.write("[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2")
        buf.write("\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2")
        buf.write("\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2")
        buf.write("\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2")
        buf.write("\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087")
        buf.write("\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2")
        buf.write("\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\3\u0093\3\2\2\2\5\u0095")
        buf.write("\3\2\2\2\7\u0097\3\2\2\2\t\u0099\3\2\2\2\13\u009b\3\2")
        buf.write("\2\2\r\u009d\3\2\2\2\17\u009f\3\2\2\2\21\u00a1\3\2\2\2")
        buf.write("\23\u00a3\3\2\2\2\25\u00a5\3\2\2\2\27\u00a7\3\2\2\2\31")
        buf.write("\u00aa\3\2\2\2\33\u00ad\3\2\2\2\35\u00b0\3\2\2\2\37\u00b3")
        buf.write("\3\2\2\2!\u00b6\3\2\2\2#\u00b9\3\2\2\2%\u00bc\3\2\2\2")
        buf.write("\'\u00bf\3\2\2\2)\u00c2\3\2\2\2+\u00c5\3\2\2\2-\u00c8")
        buf.write("\3\2\2\2/\u00cb\3\2\2\2\61\u00ce\3\2\2\2\63\u00d1\3\2")
        buf.write("\2\2\65\u00d4\3\2\2\2\67\u00d7\3\2\2\29\u00da\3\2\2\2")
        buf.write(";\u00dd\3\2\2\2=\u00e0\3\2\2\2?\u00e3\3\2\2\2A\u00e6\3")
        buf.write("\2\2\2C\u00e9\3\2\2\2E\u00ec\3\2\2\2G\u00ef\3\2\2\2I\u00f2")
        buf.write("\3\2\2\2K\u00f5\3\2\2\2M\u00f8\3\2\2\2O\u00fb\3\2\2\2")
        buf.write("Q\u00fe\3\2\2\2S\u0101\3\2\2\2U\u0104\3\2\2\2W\u0107\3")
        buf.write("\2\2\2Y\u010a\3\2\2\2[\u010d\3\2\2\2]\u0110\3\2\2\2_\u0113")
        buf.write("\3\2\2\2a\u0116\3\2\2\2c\u0119\3\2\2\2e\u011c\3\2\2\2")
        buf.write("g\u011f\3\2\2\2i\u0122\3\2\2\2k\u0125\3\2\2\2m\u0128\3")
        buf.write("\2\2\2o\u012b\3\2\2\2q\u012e\3\2\2\2s\u0131\3\2\2\2u\u0134")
        buf.write("\3\2\2\2w\u0137\3\2\2\2y\u013a\3\2\2\2{\u013d\3\2\2\2")
        buf.write("}\u0140\3\2\2\2\177\u0143\3\2\2\2\u0081\u0146\3\2\2\2")
        buf.write("\u0083\u0149\3\2\2\2\u0085\u014c\3\2\2\2\u0087\u014f\3")
        buf.write("\2\2\2\u0089\u0152\3\2\2\2\u008b\u0155\3\2\2\2\u008d\u0158")
        buf.write("\3\2\2\2\u008f\u0163\3\2\2\2\u0091\u0166\3\2\2\2\u0093")
        buf.write("\u0094\7\62\2\2\u0094\4\3\2\2\2\u0095\u0096\7\63\2\2\u0096")
        buf.write("\6\3\2\2\2\u0097\u0098\7\64\2\2\u0098\b\3\2\2\2\u0099")
        buf.write("\u009a\7\65\2\2\u009a\n\3\2\2\2\u009b\u009c\7\66\2\2\u009c")
        buf.write("\f\3\2\2\2\u009d\u009e\7\67\2\2\u009e\16\3\2\2\2\u009f")
        buf.write("\u00a0\78\2\2\u00a0\20\3\2\2\2\u00a1\u00a2\79\2\2\u00a2")
        buf.write("\22\3\2\2\2\u00a3\u00a4\7:\2\2\u00a4\24\3\2\2\2\u00a5")
        buf.write("\u00a6\7;\2\2\u00a6\26\3\2\2\2\u00a7\u00a8\7\62\2\2\u00a8")
        buf.write("\u00a9\7\62\2\2\u00a9\30\3\2\2\2\u00aa\u00ab\7\62\2\2")
        buf.write("\u00ab\u00ac\7\63\2\2\u00ac\32\3\2\2\2\u00ad\u00ae\7\62")
        buf.write("\2\2\u00ae\u00af\7\64\2\2\u00af\34\3\2\2\2\u00b0\u00b1")
        buf.write("\7\62\2\2\u00b1\u00b2\7\65\2\2\u00b2\36\3\2\2\2\u00b3")
        buf.write("\u00b4\7\62\2\2\u00b4\u00b5\7\66\2\2\u00b5 \3\2\2\2\u00b6")
        buf.write("\u00b7\7\62\2\2\u00b7\u00b8\7\67\2\2\u00b8\"\3\2\2\2\u00b9")
        buf.write("\u00ba\7\62\2\2\u00ba\u00bb\78\2\2\u00bb$\3\2\2\2\u00bc")
        buf.write("\u00bd\7\62\2\2\u00bd\u00be\79\2\2\u00be&\3\2\2\2\u00bf")
        buf.write("\u00c0\7\62\2\2\u00c0\u00c1\7:\2\2\u00c1(\3\2\2\2\u00c2")
        buf.write("\u00c3\7\62\2\2\u00c3\u00c4\7;\2\2\u00c4*\3\2\2\2\u00c5")
        buf.write("\u00c6\7\63\2\2\u00c6\u00c7\7\62\2\2\u00c7,\3\2\2\2\u00c8")
        buf.write("\u00c9\7\63\2\2\u00c9\u00ca\7\63\2\2\u00ca.\3\2\2\2\u00cb")
        buf.write("\u00cc\7\63\2\2\u00cc\u00cd\7\64\2\2\u00cd\60\3\2\2\2")
        buf.write("\u00ce\u00cf\7\63\2\2\u00cf\u00d0\7\65\2\2\u00d0\62\3")
        buf.write("\2\2\2\u00d1\u00d2\7\63\2\2\u00d2\u00d3\7\66\2\2\u00d3")
        buf.write("\64\3\2\2\2\u00d4\u00d5\7\63\2\2\u00d5\u00d6\7\67\2\2")
        buf.write("\u00d6\66\3\2\2\2\u00d7\u00d8\7\63\2\2\u00d8\u00d9\78")
        buf.write("\2\2\u00d98\3\2\2\2\u00da\u00db\7\63\2\2\u00db\u00dc\7")
        buf.write("9\2\2\u00dc:\3\2\2\2\u00dd\u00de\7\63\2\2\u00de\u00df")
        buf.write("\7:\2\2\u00df<\3\2\2\2\u00e0\u00e1\7\63\2\2\u00e1\u00e2")
        buf.write("\7;\2\2\u00e2>\3\2\2\2\u00e3\u00e4\7\64\2\2\u00e4\u00e5")
        buf.write("\7\62\2\2\u00e5@\3\2\2\2\u00e6\u00e7\7\64\2\2\u00e7\u00e8")
        buf.write("\7\63\2\2\u00e8B\3\2\2\2\u00e9\u00ea\7\64\2\2\u00ea\u00eb")
        buf.write("\7\64\2\2\u00ebD\3\2\2\2\u00ec\u00ed\7\64\2\2\u00ed\u00ee")
        buf.write("\7\65\2\2\u00eeF\3\2\2\2\u00ef\u00f0\7\64\2\2\u00f0\u00f1")
        buf.write("\7\66\2\2\u00f1H\3\2\2\2\u00f2\u00f3\7\64\2\2\u00f3\u00f4")
        buf.write("\7\67\2\2\u00f4J\3\2\2\2\u00f5\u00f6\7\64\2\2\u00f6\u00f7")
        buf.write("\78\2\2\u00f7L\3\2\2\2\u00f8\u00f9\7\64\2\2\u00f9\u00fa")
        buf.write("\79\2\2\u00faN\3\2\2\2\u00fb\u00fc\7\64\2\2\u00fc\u00fd")
        buf.write("\7:\2\2\u00fdP\3\2\2\2\u00fe\u00ff\7\64\2\2\u00ff\u0100")
        buf.write("\7;\2\2\u0100R\3\2\2\2\u0101\u0102\7\65\2\2\u0102\u0103")
        buf.write("\7\62\2\2\u0103T\3\2\2\2\u0104\u0105\7\65\2\2\u0105\u0106")
        buf.write("\7\63\2\2\u0106V\3\2\2\2\u0107\u0108\7\65\2\2\u0108\u0109")
        buf.write("\7\64\2\2\u0109X\3\2\2\2\u010a\u010b\7\65\2\2\u010b\u010c")
        buf.write("\7\65\2\2\u010cZ\3\2\2\2\u010d\u010e\7\65\2\2\u010e\u010f")
        buf.write("\7\66\2\2\u010f\\\3\2\2\2\u0110\u0111\7\65\2\2\u0111\u0112")
        buf.write("\7\67\2\2\u0112^\3\2\2\2\u0113\u0114\7\65\2\2\u0114\u0115")
        buf.write("\78\2\2\u0115`\3\2\2\2\u0116\u0117\7\65\2\2\u0117\u0118")
        buf.write("\79\2\2\u0118b\3\2\2\2\u0119\u011a\7\65\2\2\u011a\u011b")
        buf.write("\7:\2\2\u011bd\3\2\2\2\u011c\u011d\7\65\2\2\u011d\u011e")
        buf.write("\7;\2\2\u011ef\3\2\2\2\u011f\u0120\7\66\2\2\u0120\u0121")
        buf.write("\7\62\2\2\u0121h\3\2\2\2\u0122\u0123\7\66\2\2\u0123\u0124")
        buf.write("\7\63\2\2\u0124j\3\2\2\2\u0125\u0126\7\66\2\2\u0126\u0127")
        buf.write("\7\64\2\2\u0127l\3\2\2\2\u0128\u0129\7\66\2\2\u0129\u012a")
        buf.write("\7\65\2\2\u012an\3\2\2\2\u012b\u012c\7\66\2\2\u012c\u012d")
        buf.write("\7\66\2\2\u012dp\3\2\2\2\u012e\u012f\7\66\2\2\u012f\u0130")
        buf.write("\7\67\2\2\u0130r\3\2\2\2\u0131\u0132\7\66\2\2\u0132\u0133")
        buf.write("\78\2\2\u0133t\3\2\2\2\u0134\u0135\7\66\2\2\u0135\u0136")
        buf.write("\79\2\2\u0136v\3\2\2\2\u0137\u0138\7\66\2\2\u0138\u0139")
        buf.write("\7:\2\2\u0139x\3\2\2\2\u013a\u013b\7\66\2\2\u013b\u013c")
        buf.write("\7;\2\2\u013cz\3\2\2\2\u013d\u013e\7\67\2\2\u013e\u013f")
        buf.write("\7\62\2\2\u013f|\3\2\2\2\u0140\u0141\7\67\2\2\u0141\u0142")
        buf.write("\7\63\2\2\u0142~\3\2\2\2\u0143\u0144\7\67\2\2\u0144\u0145")
        buf.write("\7\64\2\2\u0145\u0080\3\2\2\2\u0146\u0147\7\67\2\2\u0147")
        buf.write("\u0148\7\65\2\2\u0148\u0082\3\2\2\2\u0149\u014a\7\67\2")
        buf.write("\2\u014a\u014b\7\66\2\2\u014b\u0084\3\2\2\2\u014c\u014d")
        buf.write("\7\67\2\2\u014d\u014e\7\67\2\2\u014e\u0086\3\2\2\2\u014f")
        buf.write("\u0150\7\67\2\2\u0150\u0151\78\2\2\u0151\u0088\3\2\2\2")
        buf.write("\u0152\u0153\7\67\2\2\u0153\u0154\79\2\2\u0154\u008a\3")
        buf.write("\2\2\2\u0155\u0156\7\67\2\2\u0156\u0157\7:\2\2\u0157\u008c")
        buf.write("\3\2\2\2\u0158\u0159\7\67\2\2\u0159\u015a\7;\2\2\u015a")
        buf.write("\u008e\3\2\2\2\u015b\u0164\7\62\2\2\u015c\u0160\4\63;")
        buf.write("\2\u015d\u015f\4\62;\2\u015e\u015d\3\2\2\2\u015f\u0162")
        buf.write("\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161")
        buf.write("\u0164\3\2\2\2\u0162\u0160\3\2\2\2\u0163\u015b\3\2\2\2")
        buf.write("\u0163\u015c\3\2\2\2\u0164\u0090\3\2\2\2\u0165\u0167\4")
        buf.write("\62;\2\u0166\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168\u0166")
        buf.write("\3\2\2\2\u0168\u0169\3\2\2\2\u0169\u016a\3\2\2\2\u016a")
        buf.write("\u016e\7\60\2\2\u016b\u016d\4\62;\2\u016c\u016b\3\2\2")
        buf.write("\2\u016d\u0170\3\2\2\2\u016e\u016c\3\2\2\2\u016e\u016f")
        buf.write("\3\2\2\2\u016f\u0092\3\2\2\2\u0170\u016e\3\2\2\2\7\2\u0160")
        buf.write("\u0163\u0168\u016e\2")
        return buf.getvalue()


class NumericLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INT_0 = 1
    INT_1 = 2
    INT_2 = 3
    INT_3 = 4
    INT_4 = 5
    INT_5 = 6
    INT_6 = 7
    INT_7 = 8
    INT_8 = 9
    INT_9 = 10
    INT_00 = 11
    INT_01 = 12
    INT_02 = 13
    INT_03 = 14
    INT_04 = 15
    INT_05 = 16
    INT_06 = 17
    INT_07 = 18
    INT_08 = 19
    INT_09 = 20
    INT_10 = 21
    INT_11 = 22
    INT_12 = 23
    INT_13 = 24
    INT_14 = 25
    INT_15 = 26
    INT_16 = 27
    INT_17 = 28
    INT_18 = 29
    INT_19 = 30
    INT_20 = 31
    INT_21 = 32
    INT_22 = 33
    INT_23 = 34
    INT_24 = 35
    INT_25 = 36
    INT_26 = 37
    INT_27 = 38
    INT_28 = 39
    INT_29 = 40
    INT_30 = 41
    INT_31 = 42
    INT_32 = 43
    INT_33 = 44
    INT_34 = 45
    INT_35 = 46
    INT_36 = 47
    INT_37 = 48
    INT_38 = 49
    INT_39 = 50
    INT_40 = 51
    INT_41 = 52
    INT_42 = 53
    INT_43 = 54
    INT_44 = 55
    INT_45 = 56
    INT_46 = 57
    INT_47 = 58
    INT_48 = 59
    INT_49 = 60
    INT_50 = 61
    INT_51 = 62
    INT_52 = 63
    INT_53 = 64
    INT_54 = 65
    INT_55 = 66
    INT_56 = 67
    INT_57 = 68
    INT_58 = 69
    INT_59 = 70
    UNSIGNED_INT = 71
    UNSIGNED_FLOAT = 72

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'0'", "'1'", "'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", 
            "'9'", "'00'", "'01'", "'02'", "'03'", "'04'", "'05'", "'06'", 
            "'07'", "'08'", "'09'", "'10'", "'11'", "'12'", "'13'", "'14'", 
            "'15'", "'16'", "'17'", "'18'", "'19'", "'20'", "'21'", "'22'", 
            "'23'", "'24'", "'25'", "'26'", "'27'", "'28'", "'29'", "'30'", 
            "'31'", "'32'", "'33'", "'34'", "'35'", "'36'", "'37'", "'38'", 
            "'39'", "'40'", "'41'", "'42'", "'43'", "'44'", "'45'", "'46'", 
            "'47'", "'48'", "'49'", "'50'", "'51'", "'52'", "'53'", "'54'", 
            "'55'", "'56'", "'57'", "'58'", "'59'" ]

    symbolicNames = [ "<INVALID>",
            "INT_0", "INT_1", "INT_2", "INT_3", "INT_4", "INT_5", "INT_6", 
            "INT_7", "INT_8", "INT_9", "INT_00", "INT_01", "INT_02", "INT_03", 
            "INT_04", "INT_05", "INT_06", "INT_07", "INT_08", "INT_09", 
            "INT_10", "INT_11", "INT_12", "INT_13", "INT_14", "INT_15", 
            "INT_16", "INT_17", "INT_18", "INT_19", "INT_20", "INT_21", 
            "INT_22", "INT_23", "INT_24", "INT_25", "INT_26", "INT_27", 
            "INT_28", "INT_29", "INT_30", "INT_31", "INT_32", "INT_33", 
            "INT_34", "INT_35", "INT_36", "INT_37", "INT_38", "INT_39", 
            "INT_40", "INT_41", "INT_42", "INT_43", "INT_44", "INT_45", 
            "INT_46", "INT_47", "INT_48", "INT_49", "INT_50", "INT_51", 
            "INT_52", "INT_53", "INT_54", "INT_55", "INT_56", "INT_57", 
            "INT_58", "INT_59", "UNSIGNED_INT", "UNSIGNED_FLOAT" ]

    ruleNames = [ "INT_0", "INT_1", "INT_2", "INT_3", "INT_4", "INT_5", 
                  "INT_6", "INT_7", "INT_8", "INT_9", "INT_00", "INT_01", 
                  "INT_02", "INT_03", "INT_04", "INT_05", "INT_06", "INT_07", 
                  "INT_08", "INT_09", "INT_10", "INT_11", "INT_12", "INT_13", 
                  "INT_14", "INT_15", "INT_16", "INT_17", "INT_18", "INT_19", 
                  "INT_20", "INT_21", "INT_22", "INT_23", "INT_24", "INT_25", 
                  "INT_26", "INT_27", "INT_28", "INT_29", "INT_30", "INT_31", 
                  "INT_32", "INT_33", "INT_34", "INT_35", "INT_36", "INT_37", 
                  "INT_38", "INT_39", "INT_40", "INT_41", "INT_42", "INT_43", 
                  "INT_44", "INT_45", "INT_46", "INT_47", "INT_48", "INT_49", 
                  "INT_50", "INT_51", "INT_52", "INT_53", "INT_54", "INT_55", 
                  "INT_56", "INT_57", "INT_58", "INT_59", "UNSIGNED_INT", 
                  "UNSIGNED_FLOAT" ]

    grammarFileName = "NumericLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.8")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


